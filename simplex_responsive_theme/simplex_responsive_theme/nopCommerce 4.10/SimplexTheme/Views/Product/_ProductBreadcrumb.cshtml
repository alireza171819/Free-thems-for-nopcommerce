@model ProductDetailsModel.ProductBreadcrumbModel
@using Nop.Core.Domain.Common
@inject CommonSettings commonSettings
@{
    var breadcrumbDelimiter = commonSettings.BreadcrumbDelimiter;
}
@if (Model.Enabled)
{
<div class="breadcrumb-wrapper">
    <ol class="breadcrumb" itemscope itemtype="http://schema.org/BreadcrumbList">
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductBreadcrumbBefore, additionalData = Model })
        <li>
            <span>
                <a href="@Url.RouteUrl("HomePage")">
                    <span><span class="products-breadcrumb-link">@T("Products.Breadcrumb.Top")</span><i class="fa fa-home"></i></span>
                </a>
            </span>
            @*<span class="divider">@breadcrumbDelimiter</span>*@
        </li>
        @{ int position = 1; }
        @foreach (var category in Model.CategoryBreadcrumb)
        {
            <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
                <span>
                    <a href="@Url.RouteUrl("Category", new { SeName = category.SeName })" itemprop="item">
                        <span itemprop="name">@category.Name</span>
                    </a>
                </span>
                @*<span class="divider">@breadcrumbDelimiter</span>*@
                <meta itemprop="position" content="@position" />
            </li>
            position++;
        }
        <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
            <strong class="active">@Model.ProductName</strong>
            <span>
                <link itemprop="url" href="@Url.RouteUrl("Product", new { SeName = Model.ProductSeName })">
            </span>
            <meta itemprop="position" content="@position" />
            @*<strong class="current-item"><a href="@Url.RouteUrl("Product", new { SeName = Model.ProductSeName })">@Model.ProductName</a></strong>*@
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductBreadcrumbAfter, additionalData = Model })
        </li>
    </ol>
</div>
} 