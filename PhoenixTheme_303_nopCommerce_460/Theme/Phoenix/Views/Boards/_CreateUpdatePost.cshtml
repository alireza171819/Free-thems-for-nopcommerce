@model EditForumPostModel
@using Nop.Core.Domain.Forums;
@{
    //page class
    NopHtml.AppendPageCssClassParts("html-forum-edit-page");
}

@await Component.InvokeAsync(typeof(ForumBreadcrumbViewComponent), new { forumTopicId = Model.ForumTopicId })
<div class="page forum-edit-page section-width">
    <div class="section-head">
        @if (Model.IsEdit)
        {
            <h1>@T("Forum.EditPost")</h1>
        }
        else
        {
            <h1>@T("Forum.NewPost")</h1>
        }
    </div>
    <div class="page-body">
        <div asp-validation-summary="ModelOnly" class="message-error"></div>
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="ForumTopicId" />
            <div class="px_private_message_send">
                <div class="inputs">
                    <label>@T("Forum.ForumName"):</label>
                    <strong class="forum-subject">@Model.ForumName</strong>
                </div>
                <div class="inputs">
                    <label>@T("Forum.TopicTitle"):</label>
                    <strong class="topic-subject">@Model.ForumTopicSubject</strong>
                </div>
                <div class="inputs">
                    @if (Model.ForumEditor == EditorType.BBCodeEditor)
                    {
                        <nop-bb-code-editor asp-for="Text" />
                    }
                    <textarea asp-for="Text" class="forum-post-text"></textarea>
                    <span asp-validation-for="Text"></span>
                </div>
                @if (Model.IsCustomerAllowedToSubscribe)
                {
            <div class="inputs reversed">
                <label class="checkbox path" asp-for="Subscribed">
                    <input type="checkbox" asp-for="Subscribed" />
                    <svg viewBox="0 0 21 21">
                        <path d="M5,10.75 L8.5,14.25 L19.4,2.3 C18.8333333,1.43333333 18.0333333,1 17,1 L4,1 C2.35,1 1,2.35 1,4 L1,17 C1,18.65 2.35,20 4,20 L17,20 C18.65,20 20,18.65 20,17 L20,7.99769186"></path>
                    </svg>
                    @T("Forum.NotifyWhenSomeonePostsInThisTopic")
                </label>
            </div>
                }
                @if (Model.DisplayCaptcha)
                {
                    <nop-captcha />
                }
                <div class="buttons">
                    <button type="submit" class="button-1 submit-post-button primary-btn">@T("Forum.Submit")</button>
                    <button type="button" class="button-2 cancel-post-button primary-btn" onclick="setLocation('@Url.RouteUrl("TopicSlug", new {id = Model.ForumTopicId, slug = Model.ForumTopicSeName})')">@T("Forum.Cancel")</button>
                </div>
            </div>
    </div>
</div>