@model IList<AddressAttributeModel>
@using Nop.Core.Domain.Catalog;
@foreach (var attribute in Model)
{
    var controlId = attribute.ControlId;
    var textPrompt = attribute.Name;

    <div class="px_register_input">
        <label>@textPrompt:</label>
        <div class="inputs custom-attributes">
            @switch (attribute.AttributeControlType)
            {
                case AttributeControlType.DropdownList:
                    {
                        <span class="pi-clipboard px_icon"></span>
                        <select name="@(controlId)" id="@(controlId)">
                            @if (!attribute.IsRequired)
                            {
                                <option value="0">---</option>}
                                    @foreach (var attributeValue in attribute.Values)
                                    {
                                <option selected="@attributeValue.IsPreSelected" value="@attributeValue.Id">@attributeValue.Name</option>
                              }
                        </select> 
                    }
                    break;
                    case AttributeControlType.RadioList:
                        {
                            <ul class="option-list">
                                @foreach (var attributeValue in attribute.Values)
                                {
                                <li>
                                    <label for="@(controlId)_@(attributeValue.Id)" class="px_radiobutton">
                                        <input id="@(controlId)_@(attributeValue.Id)" type="radio" name="@(controlId)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected" />
                                        <div class="circle">
                                            <div class="circle--inner circle--inner__1"></div>
                                            <div class="circle--inner circle--inner__2"></div>
                                            <div class="circle--inner circle--inner__3"></div>
                                            <div class="circle--inner circle--inner__4"></div>
                                            <div class="circle--inner circle--inner__5"></div>
                                            <div class="circle--outer"></div>
                                        </div>
                                        @attributeValue.Name
                                    </label>
                                </li>}
                            </ul> 
                        }
                    break;
                    case AttributeControlType.Checkboxes:
                    case AttributeControlType.ReadonlyCheckboxes:
                        {
                            <ul class="option-list">
                                @foreach (var attributeValue in attribute.Values)
                                {
                                <li>
                                    <label for="@(controlId)_@(attributeValue.Id)" class="checkbox path">
                                        <input id="@(controlId)_@(attributeValue.Id)" type="checkbox" name="@(controlId)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected" @(attribute.AttributeControlType == AttributeControlType.ReadonlyCheckboxes ? Html.Raw(" disabled=\"disabled\"") : null) />
                                        <svg viewBox="0 0 21 21">
                                            <path d="M5,10.75 L8.5,14.25 L19.4,2.3 C18.8333333,1.43333333 18.0333333,1 17,1 L4,1 C2.35,1 1,2.35 1,4 L1,17 C1,18.65 2.35,20 4,20 L17,20 C18.65,20 20,18.65 20,17 L20,7.99769186"></path>
                                        </svg>
                                        @attributeValue.Name
                                    </label>                                    
                                </li>
                                 }
                            </ul> 
                        }
                    break;
                    case AttributeControlType.TextBox:
                        {
                            <span class="pi-clipboard px_icon"></span>
                            <input name="@(controlId)" type="text" class="textbox" id="@(controlId)" value="@(attribute.DefaultValue)" /> 
                        }
                    break;
                    case AttributeControlType.MultilineTextbox:
                        {
                            <textarea id="@(controlId)" name="@(controlId)">@(attribute.DefaultValue)</textarea>
                        }
                        break;
                    case AttributeControlType.Datepicker:
                    case AttributeControlType.FileUpload:
                    case AttributeControlType.ColorSquares:
                    case AttributeControlType.ImageSquares:
                        {
                            //not support attribute type
                        }
                        break;
                }
            @if (attribute.IsRequired)
            {
                <nop-required />
            }
        </div>
    </div>
}
