@model RegisterModel
@{
    Layout = "_ColumnsOne";

    //title
    NopHtml.AddTitleParts(T("PageTitle.Register").Text);
    //page class
    NopHtml.AppendPageCssClassParts("html-registration-page");
}

<div class="page registration-page">
    <div class="section-head">
        <h2>@T("Account.Register")</h2>
    </div>
    <div class="page-body section-width">

        <div class="px_login_icon">
            <span class="pi-clipboard"></span>
        </div>
        <form asp-route="Register" asp-route-returnurl="@Context.Request.Query["ReturnUrl"]" method="post" autocomplete="off">
            <div asp-validation-summary="ModelOnly" class="message-error"></div>
            <div class="title">
                <strong>@T("Account.YourPersonalDetails")</strong>
            </div>

            <div class="px_gender_dob">
                @if (Model.DateOfBirthEnabled)
                {
                    <div class="inputs date-of-birth">
                        <label>@T("Account.Fields.DateOfBirth"):</label>
                        @if (Model.DateOfBirthRequired)
                        {
                            <nop-required />
                        }
                        <span asp-validation-for="DateOfBirthDay"></span>
                        <span asp-validation-for="DateOfBirthMonth"></span>
                        <span asp-validation-for="DateOfBirthYear"></span>
                        <nop-date-picker asp-day-name="@Html.NameFor(x => x.DateOfBirthDay)"
                                     asp-month-name="@Html.NameFor(x => x.DateOfBirthMonth)"
                                     asp-year-name="@Html.NameFor(x => x.DateOfBirthYear)"
                                     asp-begin-year="@(DateTime.Now.AddYears(-110))"
                                     asp-end-year="@(DateTime.UtcNow)"
                                     asp-selected-date="@Model.ParseDateOfBirth()" />
                    </div>
                }
                @if (Model.GenderEnabled)
                {
                    <div class="inputs gender_input">
                        <label for="gender">@T("Account.Fields.Gender"):</label>
                        <div id="gender" class="gender">
                            <span class="male">
                                <span class="pi-worker"></span>
                                <label class="forcheckbox" for="gender-male">
                                    <input type="radio" asp-for="Gender" value="M" checked="@(Model.Gender == "M")" id="gender-male" />
                                    <div class="circle">
                                        <div class="circle--inner circle--inner__1"></div>
                                        <div class="circle--inner circle--inner__2"></div>
                                        <div class="circle--inner circle--inner__3"></div>
                                        <div class="circle--inner circle--inner__4"></div>
                                        <div class="circle--inner circle--inner__5"></div>
                                        <div class="circle--outer"></div>
                                    </div>
                                    @T("Account.Fields.Gender.Male")
                                </label>
                            </span>
                            <span class="female">
                                <span class="pi-assistant"></span>
                                <label class="forcheckbox" for="gender-female">
                                    <input type="radio" asp-for="Gender" value="F" checked="@(Model.Gender == "F")" id="gender-female" />
                                    <div class="circle">
                                        <div class="circle--inner circle--inner__1"></div>
                                        <div class="circle--inner circle--inner__2"></div>
                                        <div class="circle--inner circle--inner__3"></div>
                                        <div class="circle--inner circle--inner__4"></div>
                                        <div class="circle--inner circle--inner__5"></div>
                                        <div class="circle--outer"></div>
                                    </div>
                                    @T("Account.Fields.Gender.Female")
                                </label>
                            </span>
                        </div>
                    </div>
                }
            </div>

            <div class="px_customer_info">
                @if (Model.FirstNameEnabled)
                {
                    <div class="px_register_input">
                        <div class="inputs">
                            <div class="px_input_field">
                                <span class="pi-identification px_icon"></span>
                                <input asp-for="FirstName" placeholder="@T("account.fields.firstname")" />
                            </div>
                            @if (Model.FirstNameRequired)
                            {
                                <nop-required />
                            }
                            <span asp-validation-for="FirstName"></span>

                        </div>
                    </div>
                }

                @if (Model.LastNameEnabled)
                {
                    <div class="px_register_input">
                        <div class="inputs">
                            <div class="px_input_field">
                                <span class="pi-id-card px_icon"></span>
                                <input asp-for="LastName" placeholder="@T("account.fields.lastname")" />
                            </div>
                            @if (Model.LastNameRequired)
                            {
                                <nop-required />
                            }
                            <span asp-validation-for="LastName"></span>

                        </div>
                    </div>
                }

                <div class="px_register_input">
                    <div class="inputs">
                        <div class="px_input_field">
                            <span class="pi-mail-2 px_icon"></span>
                            <input asp-for="Email" placeholder="@T("account.fields.email")" />
                        </div>
                        <nop-required />
                        <span asp-validation-for="Email"></span>
                    </div>
                </div>

                @if (Model.EnteringEmailTwice)
                {
                    <div class="px_register_input">
                        <div class="inputs">
                            <div class="px_input_field">
                                <span class="pi-mail-2 px_icon"></span>
                                <input asp-for="ConfirmEmail" placeholder="@T("account.fields.confirmemail")" />
                            </div>
                            <nop-required />
                            <span asp-validation-for="ConfirmEmail"></span>
                        </div>
                    </div>
                }

                @if (Model.UsernamesEnabled)
                {
                    <div class="px_register_input">
                        <div class="inputs">
                            <div class="px_input_field">
                                <span class="pi-identification px_icon"></span>
                                <input asp-for="Username" placeholder="@T("account.fields.username")" />
                            </div>
                            <nop-required />
                            <span asp-validation-for="Username"></span>
                            @if (Model.CheckUsernameAvailabilityEnabled)
                            {
                                @await Html.PartialAsync("_CheckUsernameAvailability")
                            }
                        </div>
                    </div>
                }


                @if (Model.CompanyEnabled)
                {
                    <div class="px_register_input">
                        <div class="inputs">
                            <div class="px_input_field">
                                <span class="pi-office-building px_icon"></span>
                                <input asp-for="Company" placeholder="@T("account.fields.company")" />
                            </div>
                            @if (Model.CompanyRequired)
                            {
                                <nop-required />
                            }
                            <span asp-validation-for="Company"></span>
                        </div>
                    </div>
                }
                @if (Model.DisplayVatNumber)
                {
                    <div class="px_register_input">
                        <div class="inputs">
                            <div class="px_input_field">
                                <span class="px_icon px-vat-number"></span>
                                <input asp-for="VatNumber" placeholder="@T("account.fields.vatnumber")" />
                                <span class="vat-note"><em>@T("Account.Fields.VatNumber.Note")</em></span>
                            </div>
                        </div>
                    </div>
                }

                @if (Model.StreetAddressEnabled ||
                Model.StreetAddress2Enabled ||
                Model.ZipPostalCodeEnabled ||
                Model.CityEnabled ||
                Model.CountyEnabled ||
                Model.CountryEnabled)
                {
                    @if (Model.StreetAddressEnabled)
                    {
                        <div class="px_register_input">
                            <div class="inputs">
                                <div class="px_input_field">
                                    <span class="pi-home px_icon"></span>
                                    <input asp-for="StreetAddress" placeholder="@T("account.fields.streetaddress")" />
                                </div>
                                @if (Model.StreetAddressRequired)
                                {
                                    <nop-required />
                                }
                                <span asp-validation-for="StreetAddress"></span>
                            </div>
                        </div>
                    }

                    @if (Model.StreetAddress2Enabled)
                    {
                        <div class="px_register_input">
                            <div class="inputs">
                                <div class="px_input_field">
                                    <span class="pi-home px_icon"></span>
                                    <input asp-for="StreetAddress2" placeholder="@T("account.fields.streetaddress2")" />
                                </div>
                                @if (Model.StreetAddress2Required)
                                {
                                    <nop-required />
                                }
                                <span asp-validation-for="StreetAddress2"></span>
                            </div>
                        </div>
                    }

                    @if (Model.ZipPostalCodeEnabled)
                    {
                        <div class="px_register_input">
                            <div class="inputs">
                                <div class="px_input_field">
                                    <span class="pi-mailbox px_icon"></span>
                                    <input asp-for="ZipPostalCode" placeholder="@T("account.fields.zippostalcode")" />
                                </div>
                                @if (Model.ZipPostalCodeRequired)
                                {
                                    <nop-required />
                                }
                                <span asp-validation-for="ZipPostalCode"></span>
                            </div>
                        </div>
                    }

                    @if (Model.CountyEnabled)
                    {
                        <div class="px_register_input">
                            <div class="inputs">
                                <div class="px_input_field">
                                    <span class="pi-home px_icon"></span>
                                    <input asp-for="County" placeholder="@T("account.fields.county")" />
                                </div>
                                @if (Model.CountyRequired)
                                {
                                    <nop-required />
                                }
                                <span asp-validation-for="County"></span>
                            </div>
                        </div>
                    }

                    @if (Model.CityEnabled)
                    {
                        <div class="px_register_input">
                            <div class="inputs">
                                <div class="px_input_field">
                                    <span class="pi-office-building px_icon"></span>
                                    <input asp-for="City" placeholder="@T("account.fields.city")" />
                                </div>
                                @if (Model.CityRequired)
                                {
                                    <nop-required />
                                }
                                <span asp-validation-for="City"></span>
                            </div>
                        </div>
                    }

                    @if (Model.CountryEnabled)
                    {
                        <div class="px_register_input">
                            <div class="inputs">
                                <div class="px_input_field">
                                    <span class="pi-home px_icon"></span>
                                    <select asp-for="CountryId" asp-items="Model.AvailableCountries"
                                    data-trigger="country-select"
                                    data-url="@(Url.RouteUrl("GetStatesByCountryId"))"
                                    data-stateprovince="#@Html.IdFor(model => model.StateProvinceId)"
                                    data-loading="#states-loading-progress"></select>
                                </div>
                                @if (Model.CountryRequired)
                                {
                                    <nop-required />
                                }
                                <span asp-validation-for="CountryId"></span>
                            </div>
                        </div>
                    }

                    @if (Model.CountryEnabled && Model.StateProvinceEnabled)
                    {
                        <div class="px_register_input">
                            <div class="inputs">
                                <div class="px_input_field">
                                    <span class="pi-home px_icon"></span>
                                    <select asp-for="StateProvinceId" asp-items="Model.AvailableStates"></select>
                                </div>
                                @if (Model.StateProvinceRequired)
                                {
                                    <nop-required />
                                }
                                <span id="states-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait")</span>
                                <span asp-validation-for="StateProvinceId"></span>
                            </div>
                        </div>
                    }
                }


                @if (Model.PhoneEnabled || Model.FaxEnabled)
                {
                    @if (Model.PhoneEnabled)
                    {
                        <div class="px_register_input">
                            <div class="inputs">
                                <div class="px_input_field">
                                    <span class="pi-call-1 px_icon"></span>
                                    <input asp-for="Phone" placeholder="@T("account.fields.phone")" />
                                </div>
                                @if (Model.PhoneRequired)
                                {
                                    <nop-required />
                                }
                                <span asp-validation-for="Phone"></span>
                            </div>
                        </div>
                    }
                    @if (Model.FaxEnabled)
                    {
                        <div class="px_register_input">
                            <div class="inputs">
                                <div class="px_input_field">
                                    <span class="pi-fax px_icon"></span>
                                    <input asp-for="Fax" placeholder="@T("account.fields.fax")" />
                                </div>
                                @if (Model.FaxRequired)
                                {
                                    <nop-required />
                                }
                                <span asp-validation-for="Fax"></span>

                            </div>
                        </div>
                    }
                }

                <div class="px_register_input">
                    <div class="inputs">
                        <div class="px_input_field">
                            <span class="pi-padlock1 px_icon"></span>
                            <input asp-for="Password" placeholder="@T("account.fields.password")" />
                        </div>
                        <nop-required />
                        <span asp-validation-for="Password"></span>
                    </div>
                </div>

                <div class="px_register_input">
                    <div class="inputs">
                        <div class="px_input_field">
                            <span class="pi-padlock1 px_icon"></span>
                            <input asp-for="ConfirmPassword" placeholder="@T("account.fields.confirmpassword")" />
                        </div>
                        <nop-required />
                        <span asp-validation-for="ConfirmPassword"></span>
                    </div>
                </div>

                @if (Model.DisplayCaptcha)
                {
                    <nop-captcha />
                }

                @if (Model.HoneypotEnabled)
                {
                    @Html.Raw(Html.GenerateHoneypotInput())
                }

                @if (Model.NewsletterEnabled || Model.CustomerAttributes.Count > 0)
                {
                    @if (Model.NewsletterEnabled)
                    {
                        <div class="px_register_input">
                            <div class="inputs px_checkeBox">
                                <label asp-for="Newsletter" class="checkbox path">
                                    <input type="checkbox" asp-for="Newsletter" />
                                    <svg viewBox="0 0 21 21">
                                        <path d="M5,10.75 L8.5,14.25 L19.4,2.3 C18.8333333,1.43333333 18.0333333,1 17,1 L4,1 C2.35,1 1,2.35 1,4 L1,17 C1,18.65 2.35,20 4,20 L17,20 C18.65,20 20,18.65 20,17 L20,7.99769186"></path>
                                    </svg>
                                    @T("Account.Fields.Newsletter")
                                </label>


                                <span asp-validation-for="Newsletter"></span>
                            </div>
                        </div>
                    }

                    @if (Model.CustomerAttributes.Count > 0)
                    {
                        @await Html.PartialAsync("_CustomerAttributes", Model.CustomerAttributes)
                    }
                }

                @if (Model.AllowCustomersToSetTimeZone)
                {
                    <div class="px_register_input">
                        <div class="inputs">
                            <div class="px_input">
                                <span class="pi-clock-1 px_icon"></span>
                                <select asp-for="TimeZoneId" asp-items="Model.AvailableTimeZones"></select>
                            </div>
                            <span asp-validation-for="TimeZoneId"></span>
                        </div>
                    </div>

                }

                @if (Model.AcceptPrivacyPolicyEnabled || Model.GdprConsents.Count > 0)
                {
                    <div class="px_register_input">
                        @if (Model.AcceptPrivacyPolicyEnabled)
                        {
                            <script asp-location="Footer">
                                $(document).ready(function () {
                                    $('#register-button').on('click', function () {
                                        if ($('#accept-consent').is(':checked')) {
                                            //do some stuff
                                            return true;
                                        } else {
                                            //just show validation errors, don't post
                                            alert('@Html.Raw(JavaScriptEncoder.Default.Encode(T("Account.Fields.AcceptPrivacyPolicy.Required").Text))');
                                            return false;
                                        }
                                    });
                                });
                            </script>
                            <div class="inputs accept-consent px_checkeBox">
                                <label for="accept-consent" class="checkbox path">
                                    <input id="accept-consent" type="checkbox" name="accept-consent" />
                                    <svg viewBox="0 0 21 21">
                                        <path d="M5,10.75 L8.5,14.25 L19.4,2.3 C18.8333333,1.43333333 18.0333333,1 17,1 L4,1 C2.35,1 1,2.35 1,4 L1,17 C1,18.65 2.35,20 4,20 L17,20 C18.65,20 20,18.65 20,17 L20,7.99769186"></path>
                                    </svg>
                                    @T("Account.Fields.AcceptPrivacyPolicy")
                                </label>
                                @if (Model.AcceptPrivacyPolicyPopup)
                                {
                                    <span class="read" id="read-privacyinfo">@T("Account.Fields.AcceptPrivacyPolicy.Read")</span>
                                    <script asp-location="Footer">
                                        $(document).ready(function () {
                                            $('#read-privacyinfo').on('click',
                                                function (e) {
                                                    displayPopupContentFromUrl(
                                                        '@Url.RouteUrl("TopicPopup", new {SystemName = "privacyinfo"})',
                                                        '@T("Account.Fields.AcceptPrivacyPolicy")');
                                                });
                                        });
                                    </script>
                                }
                                else
                                {
                                    <a class="read" id="read-privacyinfo" href="@Url.RouteTopicUrl("privacyinfo")">@T("Account.Fields.AcceptPrivacyPolicy.Read")</a>
                                }
                            </div>
                        }
                    </div>
                    <div class="px_register_input">
                        @if (Model.GdprConsents.Count > 0)
                        {
                            foreach (var consent in Model.GdprConsents)
                            {
                                if (consent.IsRequired)
                                {
                                    <script asp-location="Footer">
                                        $(document).ready(function () {
                                            $('#register-button').on('click', function () {
                                                if ($('#consent@(consent.Id)').is(':checked')) {
                                                    //do some stuff
                                                    return true;
                                                } else {
                                                    //just show validation errors, don't post
                                                    alert('@Html.Raw(JavaScriptEncoder.Default.Encode(consent.RequiredMessage))');
                                                    return false;
                                                }
                                            });
                                        });
                                    </script>
                                }
                                <div class="inputs accept-consent px_checkeBox">
                                    <label for="consent@(consent.Id)" class="checkbox path">
                                        <input type="checkbox" id="consent@(consent.Id)" type="checkbox" name="consent@(consent.Id)" checked="@consent.Accepted" />
                                        <svg viewBox="0 0 21 21">
                                            <path d="M5,10.75 L8.5,14.25 L19.4,2.3 C18.8333333,1.43333333 18.0333333,1 17,1 L4,1 C2.35,1 1,2.35 1,4 L1,17 C1,18.65 2.35,20 4,20 L17,20 C18.65,20 20,18.65 20,17 L20,7.99769186"></path>
                                        </svg>
                                        @consent.Message
                                    </label>
                                </div>
                            }

                        }
                    </div>

                }


            </div>

            <div class="buttons">
                <button type="submit" name="register-button" id="register-button" class="button-1 register-next-step-button primary-btn"><span class="pi-add-user-1"></span> @T("Account.Register.Button")</button>
            </div>
        </form>
        <div class="external-authentication">
            @await Component.InvokeAsync(typeof(ExternalMethodsViewComponent), "ExternalAuthentication")
        </div>
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.RegisterBottom, additionalData = Model })
    </div>
</div>