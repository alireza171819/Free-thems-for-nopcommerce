@model IList<VendorAttributeModel>

@using Nop.Core.Domain.Catalog

@foreach (var attribute in Model)
{
    var controlId = $"vendor_attribute_{attribute.Id}";
    var textPrompt = attribute.Name;

<div class="vendor-attributes">
    <div class="form-group">
        <label class="control-label col-sm-4 col-md-4">@textPrompt:</label>
        @switch (attribute.AttributeControlType)
        {
            case AttributeControlType.DropdownList:
                {
                    <div class="col-sm-5 col-md-5">
                        <select name="@(controlId)" id="@(controlId)" class="form-control">
                            @if (!attribute.IsRequired)
                            {
                                <option value="0">---</option>
                            }
                            @foreach (var attributeValue in attribute.Values)
                            {
                                <option selected="@attributeValue.IsPreSelected" value="@attributeValue.Id">@attributeValue.Name</option>
                            }
                        </select>
                    </div>
                }
                break;
            case AttributeControlType.RadioList:
                {
                    <div class="col-sm-5 col-md-5">
                        @foreach (var attributeValue in attribute.Values)
                        {
                            <label class="radio-inline">
                                <input class="forcheckbox" id="@(controlId)_@(attributeValue.Id)" type="radio" name="@(controlId)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected" />
                                <label class="forcheckbox" for="@(controlId)_@(attributeValue.Id)">@attributeValue.Name</label>
                            </label>
                        }
                    </div>
                }
                break;
            case AttributeControlType.Checkboxes:
            case AttributeControlType.ReadonlyCheckboxes:
                {
                    <div class="col-sm-5 col-md-5">
                        @foreach (var attributeValue in attribute.Values)
                        {
                            <label class="radio-inline">
                                <input id="@(controlId)_@(attributeValue.Id)" type="checkbox" name="@(controlId)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected" @(attribute.AttributeControlType == AttributeControlType.ReadonlyCheckboxes ? Html.Raw(" disabled=\"disabled\"") : null) />
                                <label for="@(controlId)_@(attributeValue.Id)">@attributeValue.Name</label>
                            </label>
                        }
                    </div>
                }
                break;
            case AttributeControlType.TextBox:
                {
                    <div class="col-sm-5 col-md-5">
                        <input name="@(controlId)" type="text" class="textbox form-control" id="@(controlId)" value="@attribute.DefaultValue" />
                    </div>
                }
                break;
            case AttributeControlType.MultilineTextbox:
                {
                    <div class="col-sm-5 col-md-5">
                        <textarea id="@(controlId)" class="form-control" name="@(controlId)">@attribute.DefaultValue</textarea>
                    </div>
                }
                break;
            case AttributeControlType.Datepicker:
            case AttributeControlType.FileUpload:
            case AttributeControlType.ColorSquares:
            case AttributeControlType.ImageSquares:
                {
                    //not support attribute type
                }
                break;
        }
        @if (attribute.IsRequired)
        {
            <div class="col-sm-3 col-md-3">
                <nop-required />
            </div>
        }
    </div>
</div>
}
