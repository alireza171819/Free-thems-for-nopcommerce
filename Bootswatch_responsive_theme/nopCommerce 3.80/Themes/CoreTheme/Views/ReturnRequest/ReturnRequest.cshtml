@model SubmitReturnRequestModel
@using Nop.Web.Models.Order;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.ReturnItems").Text);
    //page class
    Html.AppendPageCssClassParts("html-return-request-page");
}
<div class="page return-request-page from-panel">
    <div class="page-title panel-heading">
        <h1>@string.Format(T("ReturnRequests.Title").Text, Model.OrderId)</h1>
    </div>
    <div class="page-body panel-body">
        @if (!String.IsNullOrEmpty(Model.Result))
        {
            <div class="description alert alert-info">
                @Model.Result
            </div>
        }
        else
        {
            using (Html.BeginForm())
            {
            @Html.AntiForgeryToken()
            <div class="section">
                <div class="title">
                    <strong>@T("ReturnRequests.SelectProduct(s)")</strong>
                </div>
                <div class="paenl panel-default">
                    <table class="table table-bordered table-condensed table-striped">
                        <colgroup>
                            <col />
                            <col />
                            <col width="1" />
                        </colgroup>
                        <thead>
                            <tr>
                                <th class="a-center name">
                                    @T("ReturnRequests.Products.Name")
                                </th>
                                <th class="a-center price">
                                    @T("ReturnRequests.Products.Price")
                                </th>
                                <th class="a-center quantity">
                                    @T("ReturnRequests.Products.Quantity")
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Items)
                            {   
                                <tr>
                                    <td class="a-left name">
                                        <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })">@item.ProductName</a>
                                        @if (!String.IsNullOrEmpty(item.AttributeInfo))
                                        {
                                            <div class="attributes">
                                                @Html.Raw(item.AttributeInfo)
                                            </div>
                                        }
                                    </td>
                                    <td class="a-left price">
                                        @item.UnitPrice
                                    </td>
                                    <td class="a-left quantity">
                                        <select name="quantity@(item.Id)" class="form-control dropdown-toggle">
                                            @for (int i = 0; i <= item.Quantity; i++)
                                            {
                                                <option value="@(i)">@(i)</option>
                                            }
                                        </select>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            
            <div class="fieldset">
                <div class="title">
                    <strong>@T("ReturnRequests.WhyReturning")</strong>
                </div>
                <div class="form-fields form-horizontal">
                    <div class="form-group">
                        @{
                            var reasonsSelectList = Model.AvailableReturnReasons.Select(x => new SelectListItem
                            {
                                Text = x.Name,
                                Value = x.Id.ToString()
                            }).ToList();
                        }
                        @Html.LabelFor(model => model.ReturnRequestReasonId, new { @class = "control-label col-sm-3 col-md-4" })
                        <div class="col-sm-6 col-md-4">
                             @Html.DropDownListFor(model => model.ReturnRequestReasonId, reasonsSelectList, new { @class = "form-control return-reasons dropdown-toggle" })    
                        </div>
                    </div>
                    <div class="form-group">
                        @{
                            var actionsSelectList = Model.AvailableReturnActions.Select(x => new SelectListItem
                            {
                                Text = x.Name,
                                Value = x.Id.ToString()
                            }).ToList();
                        }
                        @Html.LabelFor(model => model.ReturnRequestActionId, new { @class = "control-label col-sm-3 col-md-4" })
                        <div class="col-sm-6 col-md-4">
                            @Html.DropDownListFor(model => model.ReturnRequestActionId, actionsSelectList, new { @class = "form-control return-actions dropdown-toggle" })     
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Comments, new {@class="control-label col-sm-3 col-md-4" })
                        <div class="col-sm-6 col-md-4">
                            @Html.TextAreaFor(model => model.Comments, new { @class = "comment form-control" })    
                            @Html.ValidationMessageFor(model => model.Comments)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-offset-3 col-md-offset-4 col-md-10">
                            <input type="submit" name="submit-return-request" class="btn btn-primary submit-return-request-button" value="@T("ReturnRequests.Submit")" />
                        </div>
                    </div>
                 </div>
            </div>
          }
        }
    </div>
</div>
