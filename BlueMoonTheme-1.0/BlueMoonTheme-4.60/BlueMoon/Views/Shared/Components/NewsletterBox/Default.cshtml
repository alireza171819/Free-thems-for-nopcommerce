@model NewsletterBoxModel

<div class="newsletter">
    <div class="title">
        <strong>@T("Newsletter.Title")</strong>
    </div>
    <div class="newsletter-subscribe" id="newsletter-subscribe-block">
        <div class="newsletter-email">
            <div class="search-content">
                <input asp-for="NewsletterEmail" id="newsletter-email" class="newsletter-subscribe-text" placeholder=@T("Newsletter.Email.Placeholder") aria-label="@T("Newsletter.Subscribe")" />

                <button type="button" id="newsletter-subscribe-button" class="button-1 newsletter-subscribe-button">
                    Subscribe
                    @*<img src="~/themes/BlueMoon/content/images/newsletter.png" style="width: 20px;">*@
                </button>
               @* <a href="#" id="newsletter-subscribe-button" class="button-1 newsletter-subscribe-button">
                    @ *<img src="~/themes/BlueMoon/content/images/newsletter.png" style="width: 20px;">* @
                </a>*@
            </div>
            @if (Model.AllowToUnsubscribe)
            {
                <div class="options">
                    <span class="subscribe">
                        <input id="newsletter_subscribe" type="radio" value="newsletter_subscribe" name="newsletter_block" checked="checked" />
                        <label for="newsletter_subscribe">@T("Newsletter.Options.Subscribe")</label>
                    </span>
                    <span class="unsubscribe">
                        <input id="newsletter_unsubscribe" type="radio" value="newsletter_unsubscribe" name="newsletter_block" />
                        <label for="newsletter_unsubscribe">@T("Newsletter.Options.Unsubscribe")</label>
                    </span>
                </div>
            }
        </div>
        <div class="newsletter-validation">
            <span id="subscribe-loading-progress" style="display: none;color: red;"  class="please-wait">@T("Common.Wait")</span>
            <span asp-validation-for="NewsletterEmail"></span>
        </div>
    </div>
    <div class="newsletter-result" id="newsletter-result-block"></div>
    <script asp-location="Footer">
        function newsletter_subscribe(n) {
            var i = $("#subscribe-loading-progress"),
                t;
            i.show();
            t = {
                subscribe: n,
                email: $("#newsletter-email").val()
            };
            addAntiForgeryToken(t);
            $.ajax({
                cache: !1,
                type: "POST",
                url: "/subscribenewsletter",
                data: t,
                success: function (n) {
                    $("#newsletter-result-block").html(n.Result);
                    n.Success ? ($("#newsletter-subscribe-block").hide(), $(
                        "#newsletter-result-block").show()) : $("#newsletter-result-block")
                            .fadeIn("slow").delay(2e3).fadeOut("slow")
                },
                error: function () {
                    alert("Failed to subscribe.")
                },
                complete: function () {
                    i.hide()
                }
            })
        }
        $(document).ready(function () {
            $("#newsletter-subscribe-button").on("click", function () {
                newsletter_subscribe("true")
            });
            $("#newsletter-email").on("keydown", function (n) {
                if (n.keyCode == 13) return $("#newsletter-subscribe-button").trigger("click"), !1
            })
        })
    </script>
  @*  <script asp-location="Footer">
        function newsletter_subscribe(subscribe) {
            var subscribeProgress = $("#subscribe-loading-progress");
            subscribeProgress.show();
            var postData = {
                subscribe: subscribe,
                email: $("#newsletter-email").val()
            };
            addAntiForgeryToken(postData);
            $.ajax({
                cache: false,
                type: "POST",
                url: "@(Url.RouteUrl("SubscribeNewsletter"))",
                data: postData,
                success: function (data, textStatus, jqXHR) {
                    $("#newsletter-result-block").html(data.Result);
                    if (data.Success) {
                        $('#newsletter-subscribe-block').hide();
                        $('#newsletter-result-block').show();
                    } else {
                        $('#newsletter-result-block').fadeIn("slow").delay(2000).fadeOut("slow");
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert('Failed to subscribe.');
                },
                complete: function (jqXHR, textStatus) {
                    subscribeProgress.hide();
                }
            });
        }

        $(document).ready(function () {
            $('#newsletter-subscribe-button').on('click', function () {
        @if (Model.AllowToUnsubscribe)
        {
            <text>if ($('#newsletter_subscribe').is(':checked')) {
                            newsletter_subscribe('true');
                        } else {
                        newsletter_subscribe('false');
                    } </text>
        }
        else
        {
            <text>newsletter_subscribe('true'); </text>
        }
                    });
            $("#newsletter-email").on("keydown", function (event) {
                if (event.keyCode == 13) {
                    $("#newsletter-subscribe-button").trigger("click");
                    return false;
                }
            });
        });
    </script>
*@
</div>